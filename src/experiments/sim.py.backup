import torch
from data.data import GPSampler, RBFKernel
from models.tnp import TNPD

def sim_train(config):

    sampler = GPSampler(RBFKernel())
    batch = sampler.sample(batch_size=config['batch_size'], max_num_points=config['num_points'], x_dim=config['feature_dim'])

    model = TNPD(
        dim_x=config['feature_dim'],
        dim_y=1,
        d_model=config['d_model'],
        emb_depth=config['emb_depth'],
        nhead=config['nhead'],
        dim_feedforward=config['dim_feedforward'],
        num_layers=config['num_layers'],
        dropout=config['dropout'],
        bound_std=config['bound_std'],
    )

    optimizer = torch.optim.Adam(model.parameters(), lr=config['lr'])

    for epoch in range(config['num_epochs']):
        outs = model(batch)
        optimizer.zero_grad()
        outs['loss'].backward()
        optimizer.step()
        print(f"Epoch {epoch}, Loss: {outs['loss'].item()}")


    pass

def sim_test(config):
    pass